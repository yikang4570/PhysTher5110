# 1a. Element-wise multiplication without loops
dat <- matrix(c(16, 2, 3, 13,
5, 11, 10, 8,
9, 7, 6, 12,
4, 14, 15, 1), nrow = 4, ncol = 4, byrow = TRUE)
dat
vect <- 1:4
vect
# Row-wise multiplication
rowMultiplier <- dat * vect
# Column-wise multiplication
colMultiplier <- t(t(dat) * vect)
cat("Row-wise multiplication:\n")
print(rowMultiplier)
cat("\nColumn-wise multiplication:\n")
print(colMultiplier)
# 1b. Vectorized alternative to replace loops
set.seed(123)  # Setting seed for reproducibility
data <- -2 + 2 * matrix(runif(10000 * 20000), nrow = 10000, ncol = 20000)
max(data)
min(data)
?runif
source("~/Documents/GitHub/PhysTher5110/scripts/R/lab_01_R_basics.R", echo=TRUE)
source("~/Documents/GitHub/PhysTher5110/scripts/R/lab_01_R_basics.R", echo=TRUE)
# In class assignment ----------------------------------------------------------------
#2. Create a vector A that has four values 1, 1, 1, 1.
A <-(1,1,1,1)
# In class assignment ----------------------------------------------------------------
#2. Create a vector A that has four values 1, 1, 1, 1.
## 2. Create A = c(1,1,1,1)
A <- rep(1, 4)
A
A <- c(1,1,1,1)
A
## 3. Create B = c(2,3)
B <- c(2, 3)
B
## 3. Create a vector B that have two values 2, 3.
B <- c(2, 3)
B
## 4. Multiply vectors A and B together. What is the result?
A_times_B <- A*B
## 5. Write a for-loop that counts from 1 to 10 and outputs the current value at every step.
for (i in 1:10) {
print(i)
}
for (i in 1:10) {
total <- 0 + i
print(total)
}
for (i in 1:10) {
total <- 0 + i!
total <- i!
## 6. Write a for-loop that counts from 1 to 10 and outputs the sum of all previous values up to that point at every step.
total <- 0
for (i in 1:10) {
sum <- total + i
print(total)
}
for (i in 1:10) {
sum <- total + i
print(sum)
}
print(running_sum)
## 6. Write a for-loop that counts from 1 to 10 and outputs the sum of all previous values up to that point at every step.
running_sum <- 0
for (i in 1:10) {
running_sum <- running_sum + i
print(running_sum)
}
# a simple for-loop
for(i in seq(1:3)){
print("Hello!")
}
## 7. Create a data frame with 40 simulated participants, 20 males and 20 females. Simulate normally distributed heights for each of these groups using the values given in the Lab 01 script file. How can you most efficiently calculate the mean and the standard deviation for the males and females? (Hint. We did not directly show you how to do this. This will mostly be an exercise in creative thinking, searching the web, and working together!)
set.seed(1204)  # for reproducibility
#generate simulated data
sex <- factor(c(rep("male", 20), rep("female", 20))) #rep=repeat
height <- c(rnorm(20, mean=67, sd=2.5), rnorm(20, 64, 2.2)) #number of observation, mean, sd
DAT1 <- data.frame(sex, height)
DAT1
plot(height~sex, data=DAT1)
#given the dataset DAT1, calculate the mean (sd) for male and female
summary(DAT1)
#given the dataset DAT1, calculate the mean (sd) for male and female
#option 1
library(dplyr)
a<- DAT1 %>%
group_by(sex) %>%
summarise(
mean_height = mean(height),
sd_height   = sd(height),
.groups = "drop"
)
a
# option 2
tapply(DAT1$height, DAT1$sex, mean)
tapply(DAT1$height, DAT1$sex, sd)
